Find a word from 2d Grid of Character

Input

{
    a b c d
    r a c e
    a c a r
    c b r d
}

Word : car

Direction: Left to Right, Right to Left

Output: {1,2}, {2,1}

int[] x = new int[] {-1,-1,-1,0,0,1,1,1}
int[] y = new int[] {-1,0,-1,1,-1,1,0,1}
int r, int c = 4

Public static Patternsearc(char[,] grid, string word,)
{
  for(int row= 0;row< r;row++)
  {
    For(int col = 0;col <c;col++)
       {
         if(wordsearch(grid,word,r,c)
         console.writeline("Pattern found " + r +" , " + c);
       }
           
       
  }
  
}

public static wordsearch(char[,] grid, string word, int r, int c)
{if(grid[row,col] ! = word[0])
           {
               return false;
           }
           
           for(int dir = 0; dir < 8;dir ++)
           {
             int k ,int xd = row + x[dir], yd = col + y[dir];
             if(xd>=r || xd<0 ||yd >=c || yd <0)
             {
                 break;
             }
             
             for(int k=1;k<word.lenth;k++)
             {
               if(grid[xd,cd] != word[K];
               { 
                 break;
               }
               
               xd = xd +x[dir];
               yd = yd + y[dir];
             }
             
             if(k== word.length)
             {
               return true;
             }          
                           
             
           }
        return false;   
       }
       }
       
 // Employee Table

FirstName | LastName  | Alias
==============================
AAAAAAA     BBBBBBB    AAABBB
CCCCDDD                CCCDDD
EEEEEEE     FFFFFFF    EEEFFF
XXXXXXX     YYYYYYY    XXXYYY

update table employee set Alias = concat(substring (firstname,1,3),substring (lastname,1,3)) 

select Alias, Row_number from employee where Mod(Row_Number,2) = 1;




