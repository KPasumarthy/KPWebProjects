<!DOCTYPE html>
<html  ng-app="myApp">
<head>
    <title ng-bind="helloAngular"></title>
</head>
<body>
    @{
        ViewBag.Title = "AngularDOM";
    }

    <h2>AngularDOM</h2>

    <style>
        table, th, td {
            border: 2px solid green;
            border-collapse: collapse;
            padding: 5px;
        }

            table tr:nth-child(odd) {
                background-color: #f1f1f1;
            }

            table tr:nth-child(even) {
                background-color: #FFF0F5;
            }
    </style>

    <script src="~/Scripts/angular.min.js"></script>
    <script src="~/Scripts/angular-animate.js"></script>
    <script>
        var app = angular.module('myApp', []);
        app.controller('myCtrl', ['$scope', function ($scope) {
            $scope.names = [
                { name: 'Sarayu',   lastName: 'Nadikuduti', country: 'India' },
                { name: 'Sailesh',  lastName: 'Nadikuduti', country: 'India' },
                { name: 'Gayatri',  lastName: 'Pasumarthy', country: 'India' },
                { name: 'Hemanth',  lastName: 'Tangeda',    country: 'London' },
                { name: 'Greeshma', lastName: 'Tangeda',    country: 'London' },
                { name: 'Madhumati',lastName: 'Pasumarthy', country: 'London' },
                { name: 'Revathi',  lastName: 'Yerramilli', country: 'USA' },
                { name: 'Srinidhi', lastName: 'Pasumarthy', country: 'USA' },
                { name: 'Kailash',  lastName: 'Pasumarthy', country: 'USA' },
                { name: 'Jayaprada', lastName: 'Pasumarthy', country: 'USA' },
                { name: 'Haritha',  lastName: 'Magapu',     country: 'USA' },
                { name: 'Hemanth',  lastName: 'Magapu',     country: 'USA' },
                { name: 'Madhavi',  lastName: 'Yerramilli', country: 'USA' }
            ];
            $scope.cars = [
                { model : "Ford Mustang", color: "red" },
                { model : "Fiat 500", color: "blue" },
                { model : "BMW X3", color: "grey"}
            ];
            $scope.orderByMe = (function (x) {
                $scope.myOrderBy = x;
            });
        }]);
    </script>

    <div id="ngSelectOptionBox" ng-controller="myCtrl">
        <br />
        <h4>AngularJS 'ng-options' directive on the Select Box.</h4>       
        <select ng-model="selectedName" ng-options="x.name for x in names">
            <option ng-repeat="x.name for x in names">{{x}}</option>
        </select>
        <br />
        <p>
            You selected : {{selectedName.name}} {{selectedName.lastName}} from {{selectedName.country}}.
        </p>       
        <br />
    </div>

    <div id="ngClickOnTable" ng-controller="myCtrl">
        <br />
        <h4>AngularJS 'ng-click' directive on the table headers changes the sorting order of the array.</h4>
        <table border="1" width="50%">
            <tr>
                <th ng-click="orderByMe('name')">SNo</th>
                <th ng-click="orderByMe('name')">Name</th>
                <th ng-click="orderByMe('lastName')">LastName</th>
                <th ng-click="orderByMe('country')">Country</th>
            </tr>
            <tr ng-repeat="x in names | orderBy : myOrderBy">
                <td>{{ $index + 1 }}</td>
                <td>{{x.name}}</td>
                <td>{{x.lastName}}</td>
                <td>{{x.country}}</td>
            </tr>
        </table>
        <br />
    </div>

    <div id="ngSelectOption" ng-controller="myCtrl">
        <br />
        <h4>AngularJS 'ng-options' directive to choose an option in the select box.</h4>
        <select ng-model="selectedCar" ng-options="x.model for x in cars"></select>
        <br />
        <p>
            You selected : {{selectedCar.model}}.
            Color of the selected car : {{selectedCar.color}}.
            When 'ng-options' directive is used to create a drop-down lists, the selected value can be an object.
        </p>
        <br/>
    </div>

    <div id="ngDisableDirective" ng-init="mySwitch=true" ng-controller="myCtrl">
        <br />
        <h4>AngularJS 'ng-disabled' directive binds AngularJS application data to HTML Elements.</h4>
        <p>
            <button ng-disabled="mySwitch">Click Me!</button>
        </p>
        <p>
            <input type="checkbox" ng-model="mySwitch">Button
        </p>
        <p>
            {{ mySwitch }}
        </p>
        <br />
        <p>
            The ng-disabled directive binds the application data mySwitch to the HTML button's disabled attribute.
            The ng-model directive binds the value of the HTML checkbox element to the value of mySwitch.
        </p>
        <br />
    </div>
       
    <div ng-controller="myCtrl" ng-init="hour=13">
        <br />
        <h4>AngularJS 'ng-show' directive shows or hides an HTML Element</h4>
        <p ng-show="true">I am visible.</p>
        <p ng-show="false">I am not Visible</p>
        <br />
        <p>The ng-show directive shows (or hides) an HTML element based on the value of ng-show.</p>
        <br />
        You can use any expression that evaluates to true or false:
        <p ng-show="hour > 12">I am {{hour}}. So visible.</p>
        <br />
    </div>

</body>
</html>
