<!DOCTYPE html>
<html  ng-app="myApp">
<head>
    <title ng-bind="helloAngular"></title>
</head>
<body>
    @{
        ViewBag.Title = "AngularEvents";
    }

    <h2>AngularEvents</h2>

    <script src="~/Scripts/angular.min.js"></script>
    <script src="~/Scripts/angular-animate.js"></script>

    <div id="idAngJSHTMLEvents" ng-controller="myCtrl">
        <br />
        <h3>AngularJS HTML Events</h3>
        <p>AngularJS event listeners can be added to HTML Elements by using one or more of following directives.</p>
        <ul>
            <li>    ng-blur         </li>
            <li>    ng-change       </li>
            <li>    ng-click        </li>
            <li>    ng-copy         </li>
            <li>    ng-cut          </li>
            <li>    ng-dblclick     </li>
            <li>    ng-focus        </li>
            <li>    ng-keydown      </li>
            <li>    ng-keypress     </li>
            <li>    ng-keyup        </li>
            <li>    ng-mousedown    </li>
            <li>    ng-mouseenter   </li>
            <li>    ng-mouseleave   </li>
            <li>    ng-mousemove    </li>
            <li>    ng-mouseover    </li>
            <li>    ng-mouseup      </li>
            <li>    ng-paste        </li>
        </ul>
        <p>The event directives allows us to run AngularJS functions at certain user events.        
           An AngularJS event will not overwrite an HTML event, both events will be executed.</p>
        <br />
    </div>

    <div id="idAngJSMouseEvents" ng-controller="myCtrl">
        <br />
        <h3>AngularJS Mouse Events</h3>
        <p>AngularJS mouse event and respectibe listeners can be added to HTML Elements by using one or more of following directives.</p>
            <ul>
                <li>    ng-mouseenter   </li>
                <li>    ng-mouseover    </li>
                <li>    ng-mousemove    </li>
                <li>    ng-mouseleave   </li>
                <li>    ng-mousedown    </li>
                <li>    ng-mouseup      </li>
                <li>    ng-click        </li>
            </ul>
        <p>
            The event directives allows us to run AngularJS functions at certain user events.
            An AngularJS event will not overwrite an HTML event, both events will be executed.
        </p>
        <br />
    </div>

    <div id="idAngJSMouseMove" ng-controller="myCtrl">
        <br />
        <h3 ng-mousemove="mouseMoveCount = mouseMoveCount + 1">AngularJS 'ng-mousemove' : Move Mouse</h3> 
        Move mouse over the above HTML Element to increase the mouse count!!!
        <h4>{{mouseMoveCount}}</h4>
        <br/>
    </div>

    <div id="idAngJSClick" ng-controller="myCtrl">
        <br />
        <h3 ng-click="mouseClickCount = mouseClickCount + 1">AngularJS 'ng-click' : Mouse Click</h3>
        Click mouse over the above HTML Element to increase the click count!!!
        <h4>{{mouseClickCount}}</h4>
        <br />
    </div>

    <div id="idAngJSButtonClick" ng-controller="myCtrl">
        <br />
        <h3>AngularJS 'ng-click' : HTML Button </h3>
        <button ng-click="myBtnClick_Function()">Button 'ng-click'</button>
        <p>Click the above HTML Button to increase the click count!!!</p>
        <h4>{{buttonClickCount}}</h4>
        <br />
    </div>

    <div id="idAngJSToggleButton" ng-controller="myCtrl">
        <br />
        <h3>AngularJS 'ng-click' : HTML Toggle Button </h3>
        <button ng-click="myToggleBtnClick_Func()">Toggle Menu</button>
        <p>Click the above HTML Button to toggle between Menu Items!!!</p>
        <div ng-show="showMeMenu">
            <div>Pizza</div>
            <div>Pasta</div>
            <div>Pesce</div>
        </div>
        <br />
    </div>

    <div id="idAngJSEvent" ng-controller="myCtrl">
        <br />
        <h3 ng-mousemove="myMouseMove_EventHandler($event)">AngularJS '$event' Object into ng-JS Event Handler: Move Mouse</h3> 
        <p>Coordinates : {{x + ', ' + y}} !!!</p>
        <br />
    </div>


    <script>
        var myApp = angular.module('myApp', []);
        myApp.controller('myCtrl', function ($scope) {
            $scope.mouseMoveCount = 0;
            $scope.mouseClickCount = 0;
            $scope.buttonClickCount = 0;
            $scope.myBtnClick_Function = function () { $scope.buttonClickCount++; }
            $scope.showMeMenu = false;
            $scope.myToggleBtnClick_Func = function () { $scope.showMeMenu = !$scope.showMeMenu; }
            $scope.myMouseMove_EventHandler = function (myMouseEvent) {
                $scope.x = myMouseEvent.clientX;
                $scope.y = myMouseEvent.clientY;
            }
        });
    </script>

</body>
</html>
